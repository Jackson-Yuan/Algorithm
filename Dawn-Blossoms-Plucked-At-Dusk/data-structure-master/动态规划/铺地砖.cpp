/**有一个大小是 2 x n 的网格，现在需要用2种规格的骨牌铺满，骨牌规格分别是 2 x 1 和 2 x 2，请计算一共有多少种铺设的方法。*/
#include<stdio.h>
#include<iostream>

using namespace std;
int dp[40];

int main() {
    int t;
    scanf("%d", &t);
    while (t--) {
        dp[1] = 1;
        dp[2] = 3;
        int n;
        scanf("%d", &n);
        if (n <= 2) {
            printf("%d\n", dp[n]);
            continue;
        }
        for (int i = 3; i <= n; i++) {
            dp[i] = dp[i - 1] + 2 * dp[i - 2];
        }

        printf("%d\n", dp[n]);
    }
}
/*
此题乍一看是特么超级台阶的翻版 但其实不一样(我还是太年轻~~~) 超级台阶的递推式为到达本级台阶的个数等于前一级与前两级的和
此题一看 不也是第n列是n-1列与n-2列的和嘛 但是挖坑了 在第n-2列时 不仅仅只有摆2*2的方法 也可以横着摆2个2*1  但竖着摆的话就是n-1的情况就不单独讨论了
所以n-2的个数要乘以2

其实这种纯从理论推导得出递推式 难度有些题目很大 其实完全可以列出前几项找规律 也算做找动态规划递推式的一种方法 
*/
